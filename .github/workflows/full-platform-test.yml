name: Full Platform Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch: # Allows manual triggering

jobs:
  # Desktop Tests
  desktop-tests:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            container: rust:1.75-slim-bookworm
          - os: windows-latest
            platform: windows

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container || '' }}

    steps:
      - name: Install Linux dependencies (Container)
        if: matrix.platform == 'linux' && matrix.container
        run: |
          apt-get update && apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libasound2-dev \
            pkg-config \
            build-essential \
            git \
            ca-certificates

      - name: Install Linux dependencies (Host)
        if: matrix.platform == 'linux' && !matrix.container
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libasound2-dev \
            pkg-config \
            build-essential

      - name: Setup Node.js (Container)
        if: matrix.container
        run: |
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
          apt-get install -y nodejs

      - name: Setup Node.js (Host)
        if: "!matrix.container"
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Setup Rust (Host only)
        if: "!matrix.container"
        uses: dtolnay/rust-toolchain@stable

      - name: Verify Rust (Container)
        if: matrix.container
        run: |
          rustc --version
          cargo --version

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        run: |
          cd src-tauri
          cargo test --no-default-features -- --nocapture

      - name: Build application
        run: npm run tauri build

  # Android Tests
  android-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Add Android targets
        run: |
          rustup target add aarch64-linux-android armv7-linux-androideabi
          cargo install cargo-ndk

      - name: Test Android compatibility
        run: |
          cd src-tauri
          cargo check --target aarch64-linux-android --no-default-features

  # Summary Job
  test-summary:
    runs-on: ubuntu-latest
    needs: [desktop-tests, android-tests]
    if: always()

    steps:
      - name: Generate Test Summary
        run: |
          echo "## ðŸ§ª Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Desktop Results
          echo "### Desktop Platforms" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.desktop-tests.result }}" == "success" ]]; then
            echo "**Desktop Tests**: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Desktop Tests**: FAILED" >> $GITHUB_STEP_SUMMARY
          fi

          # Android Results  
          echo "### Mobile Platforms" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.android-tests.result }}" == "success" ]]; then
            echo "**Android Tests**: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Android Tests**: FAILED" >> $GITHUB_STEP_SUMMARY
          fi

          # Overall Status
          echo "" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.desktop-tests.result }}" == "success" && "${{ needs.android-tests.result }}" == "success" ]]; then
            echo "**All platform tests passed!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Some tests failed. Check individual job logs.**" >> $GITHUB_STEP_SUMMARY
          fi

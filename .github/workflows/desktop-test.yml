name: Desktop Tests (Windows & Linux)

on:
  push:
    branches: [main, develop, mobile-desktop, Making-test-balls]
  pull_request:
    branches: [main, develop]

jobs:
  test-linux:
    runs-on: ubuntu-latest
    container:
      image: rust:1.75-slim-bookworm
      options: --user root

    steps:
      - name: Install system dependencies (Linux)
        run: |
          apt-get update && apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libasound2-dev \
            pkg-config \
            build-essential \
            curl \
            wget \
            file \
            git \
            ca-certificates \
            gnupg \
            lsb-release

      - name: Setup Node.js
        run: |
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
          apt-get install -y nodejs

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js dependencies
        run: npm ci

      - name: Verify Rust installation
        run: |
          rustc --version
          cargo --version
          rustup --version

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Run Rust tests (Linux)
        run: |
          cd src-tauri
          cargo test --no-default-features -- --nocapture

      - name: Build Tauri app (Linux)
        run: |
          npm run tauri build

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            src-tauri/target/release/bundle/appimage/*.AppImage
            src-tauri/target/release/bundle/deb/*.deb

  test-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install Node.js dependencies
        run: npm ci

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Run Rust tests (Windows)
        run: |
          cd src-tauri
          cargo test --no-default-features -- --nocapture

      - name: Build Tauri app (Windows)
        run: |
          npm run tauri build

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/nsis/*.exe

  test-results:
    runs-on: ubuntu-latest
    needs: [test-linux, test-windows]
    if: always()

    steps:
      - name: Test Results Summary
        run: |
          echo "## Desktop Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- Linux Tests: ${{ needs.test-linux.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Windows Tests: ${{ needs.test-windows.result }}" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.test-linux.result }}" == "success" && "${{ needs.test-windows.result }}" == "success" ]]; then
            echo "All desktop tests passed!" >> $GITHUB_STEP_SUMMARY
          else
            echo "Some desktop tests failed!" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
